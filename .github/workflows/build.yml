name: Build

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libusb-1.0-0-dev

      - name: Fetch libplist
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: libplist-latest_x86_64-linux-gnu
          repo: libimobiledevice/libplist

      - name: Fetch libimobiledevice-glue
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          repo: libimobiledevice/libimobiledevice-glue

      - name: Install external dependencies
        run: |
          mkdir extract
          for I in *.tar; do
              tar -C extract -xvf $I
          done

          sudo cp -r extract/* /
          sudo ldconfig

      - name: Run autogen
        run: ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig LDFLAGS="-Wl,-rpath=/usr/local/lib"

      - name: Run make
        run: make

      - name: Run make install
        run: sudo make install

      - name: Prepare artifact
        run: |
          mkdir -p dest
          DESTDIR=`pwd`/dest make install
          tar -C dest -cf libirecovery.tar lib usr
          echo -n "$(git rev-parse HEAD | tr -d '\n')" > latest_build_sha.txt
          echo -n "$(git rev-list --count HEAD | tr -d '\n')" > latest_build_num.txt

      - name: Upload versioning
        uses: actions/upload-artifact@v2
        with:
          name: Versioning
          path: |
            ${{ github.workspace }}/latest_build_sha.txt
            ${{ github.workspace }}/latest_build_num.txt

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: libirecovery-latest_Linux
          path: libirecovery.tar

  build-macOS:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          if test -x "`which port`"; then
              sudo port install libtool autoconf automake pkgconfig
          else
              brew install libtool autoconf automake pkgconfig
          fi
        shell: bash

      - name: Fetch libplist
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: libplist-latest_macOS
          repo: libimobiledevice/libplist

      - name: Fetch libimobiledevice-glue
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: libimobiledevice-glue-latest_macOS
          repo: libimobiledevice/libimobiledevice-glue

      - name: Install external dependencies
        run: |
          mkdir extract
          for I in *.tar; do
              tar -C extract -xvf $I
          done
          sudo cp -r extract/* /

      - name: Run autogen
        run: |
          SDKDIR=`xcrun --sdk macosx --show-sdk-path`
          TESTARCHS="arm64 x86_64"
          USEARCHS=
          for ARCH in $TESTARCHS; do
              if echo "int main(int argc, char **argv) { return 0; }" |clang -arch $ARCH -o /dev/null -isysroot $SDKDIR -x c - 2>/dev/null; then
                  USEARCHS="$USEARCHS -arch $ARCH"
              fi
          done
          export CFLAGS="$USEARCHS -isysroot $SDKDIR"
          echo "Using CFLAGS: $CFLAGS"
          ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

      - name: Run make
        run: make

      - name: Run make install
        run: sudo make install

      - name: Prepare artifact
        run: |
          mkdir -p dest
          DESTDIR=`pwd`/dest make install
          tar -C dest -cf libirecovery.tar usr
          echo -n "$(git rev-parse HEAD | tr -d '\n')" > latest_build_sha.txt
          echo -n "$(git rev-list --count HEAD | tr -d '\n')" > latest_build_num.txt

      - name: Upload versioning
        uses: actions/upload-artifact@v2
        with:
          name: Versioning
          path: |
            ${{ github.workspace }}/latest_build_sha.txt
            ${{ github.workspace }}/latest_build_num.txt

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: libirecovery-latest_Darwin
          path: libirecovery.tar
